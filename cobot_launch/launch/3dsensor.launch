<!--
Top launch file for the 3d sensor for bringing up all relevant nodes
for working with the 3d sensor
-->

<launch>
  <arg name="publish_tf"    default="true"/>  <!-- to false -->
  <arg name="3d_sensor"     default="$(env COBOT_3D_SENSOR)"/> <!-- load from shell -->
  <arg name="camera"        default="$(arg 3d_sensor)_camera"/>


  <!-- Factory calibration depth registration-->
  <arg name="depth_registration"          default="true"/>
  <arg if="$(arg depth_registration)"        
       name="depth"                       value="depth_registered"/> 
  <arg unless="$(arg depth_registration)"
       name="depth"                       value="depth"/>

  <!-- Proces modules -->
  <arg name="rgb_processing"                   default="true"/>
  <arg name="ir_processing"                    default="true"/>
  <arg name="depth_processing"                 default="true"/>
  <arg name="depth_registered_processing"      default="true"/>
  <arg name="disparity_processing"             default="true"/>
  <arg name="disparity_registered_processing"  default="true"/>
  <arg name="scan_processing"                  default="true"/>
 
  <!-- Number of working threads the nodelet manager can use --> 
  <arg name="num_worker_threads"  default="4"/>




  <!-- Bringup the selected 3D camera-->
  <include file="$(find cobot_launch)/launch/include/3dsensor/$(arg 3d_sensor).launch.xml">
    <arg name="camera"                             value="$(arg camera)"/>   
    <arg name="publish_tf"                         value="$(arg publish_tf)"/> 
    <arg name="depth_registration"                 value="$(arg depth_registration)"/> 
    <arg name="num_worker_threads"                 value="$(arg num_worker_threads)"/> 

    <arg name="rgb_processing"                     value="$(arg rgb_processing)"/>
    <arg name="ir_processing"                      value="$(arg ir_processing)"/>
    <arg name="depth_processing"                   value="$(arg depth_processing)"/>
    <arg name="depth_registered_processing"        value="$(arg depth_registered_processing)"/>
    <arg name="disparity_processing"               value="$(arg disparity_processing)"/>
    <arg name="disparity_registered_processing"    value="$(arg disparity_registered_processing)"/>
  </include>



  <!-- Laserscan topic -->
  <arg name="scan_topic"          default="scan"/>

  <!-- Bringup the Laserscan module (Fake laser)-->
  <!-- Uses the depthimage to laserscan module -->
  <group if="$(arg scan_processing)">
    <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan" args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet $(arg camera)/$(arg camera)_nodelet_manager">

      <param name="scan_height"         value="30"/> 
      <param name="output_frame_id"     value="/$(arg camera)_depth_frame"/>
      <param name="range_min"           value="0.15"/>

      <remap from="image"               to="$(arg camera)/$(arg depth)/image_raw"/>
      <remap from="scan"                to="$(arg scan_topic)"/>

      <!-- Bug in ros that $(arg camera) is prepended to topic somehow -->
      <remap from="$(arg camera)/image" to="$(arg camera)/$(arg depth)/image_raw"/>
      <remap from="$(arg camera)/scan" to="$(arg scan_topic)"/>

    </node>
  </group>
</launch>
